idProgram
	idVariableSection:
		idKeyWord: VAR
		idIdent: x
		idSymbol: :
		idType: INTEGER
		idSymbol: ;
		idIdent: y
		idSymbol: :
		idType: INTEGER
		idSymbol: ;
		idIdent: n
		idSymbol: :
		idType: INTEGER
		idSymbol: ;
		idIdent: m
		idSymbol: :
		idType: INTEGER
		idSymbol: ;
	idOperationSection:
		idKeyWord: BEGIN
		idOperator:
			idIdent: n
			idSymbol: :=
			idConst: 1
			idSymbol: ;
		idOperator:
			idIdent: m
			idSymbol: :=
			idSymbol: (
			idExpression:
				idIdent: n
				idSymbol: +
				idConst: 1
			idSymbol: )
			idSymbol: +
			idSymbol: (
			idExpression:
				idIdent: n
				idSymbol: -
				idIdent: m
			idSymbol: )
			idSymbol: ;
		idOperator:
			idIdent: n
			idSymbol: :=
			idSymbol: (
			idExpression:
				idIdent: n
				idSymbol: +
				idConst: 1
			idSymbol: )
			idSymbol: -
			idSymbol: (
			idExpression:
				idIdent: n
				idSymbol: -
				idIdent: m
			idSymbol: )
			idSymbol: ;
		idOperator:
			idSymbol: CALL
			idIdent: ZZ
			idSymbol: ;
		idOperator:
			idIdent: x
			idSymbol: :=
			idIdent: m
			idSymbol: +
			idConst: 5
			idSymbol: ;
		idOperator:
			idSymbol: IF
			idExpression:
				idIdent: n
				idSymbol: <
				idConst: 9
			idSymbol: THEN
			idOperator:
				idIdent: y
				idSymbol: :=
				idIdent: n
				idSymbol: +
				idConst: 3
			idSymbol: ELSE
			idOperator:
				idIdent: y
				idSymbol: :=
				idConst: 8
				idSymbol: ;
		idOperator:
			idIdent: x
			idSymbol: :=
			idIdent: m
			idSymbol: +
			idConst: 5
			idSymbol: ;
		idKeyWord: END.